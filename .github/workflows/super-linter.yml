name: Super-Linter with CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  super-linter:
    name: Super-Linter
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: npm ci
        working-directory: app/frontend

      - name: Run Super-Linter
        uses: github/super-linter@v6
        env:
          VALIDATE_ALL_CODEBASE: false       # Lint only changed files on PRs
          DEFAULT_BRANCH: main               # Set your main branch
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.json
          TYPESCRIPT_ES_CONFIG_FILE: .eslintrc.json
          LINTER_RULES_PATH: .               # Where your .eslintrc lives
          VALIDATE_TYPESCRIPT_ES: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_YAML: true
    
  test:
    name: Build and Test Workspaces
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # FRONTEND
      - name: Install root dependencies
        run: npm install
        working-directory: app/frontend

      - name: Build frontend
        run: npm run build
        working-directory: app/frontend
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}


      - name: Test frontend with coverage
        run: npm run test:coverage
        working-directory: app/frontend

      - name: Upload frontend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/

      # BACKEND
      - name: Install root dependencies
        run: npm install
        working-directory: app/backend
      
      - name: Build backend
        run: npm run build || echo "No build script"
        working-directory: app/backend

      - name: Test backend with coverage
        run: npm run test:coverage
        working-directory: app/backend

      - name: Upload backend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage/
